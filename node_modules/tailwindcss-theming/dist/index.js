"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const plugin_1 = __importDefault(require("tailwindcss/plugin"));
const plugin_2 = require("./plugin");
const plugins_1 = require("./plugins");
module.exports = plugin_1.default.withOptions(
/**
 * Returns the actual Tailwind plugin, and takes as parameters
 * the plugin's options.
 */
function (options) {
    const { themes, preset, variants, prefix, strategy } = plugin_2.getOptions(options);
    const manager = plugin_2.getThemeManager(themes, preset);
    // The Tailwind plugin.
    return function (helpers) {
        var _a, _b;
        // Applies the scheme variant plugin
        plugins_1.schemeVariant(helpers, variants);
        // Applies the theming plugin
        if (manager) {
            // prettier-ignore
            const css = manager
                .setStrategy((_a = manager.getStrategy()) !== null && _a !== void 0 ? _a : strategy)
                .setPrefix((_b = manager.getPrefix()) !== null && _b !== void 0 ? _b : prefix)
                .getCssConfiguration();
            plugins_1.theming(helpers, css);
        }
    };
}, 
/**
 * Returns a configuration that replaces the user's Tailwind configuration.
 * Takes as parameters the plugin's options.
 */
function (options) {
    const { themes, preset } = plugin_2.getOptions(options);
    const manager = plugin_2.getThemeManager(themes, preset);
    // Overrides some of the user's configuration.
    return manager ? manager.getTailwindConfiguration() : {};
});
